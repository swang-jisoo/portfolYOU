.circle-progressbar-container {
  display: flex;
  flex-flow: row wrap;
  justify-content: space-between;
  align-items: center;
  //min-width: 270px;
  width: 100%;
  min-height: 100%;
}

.circle-progressbar-item {
  position: relative;
  width: 114px;
  height: 114px;
  margin: 0.5em 1em;
  transform: rotate(-90deg);
}

.circle-progressbar {
  //--size: 12rem;
  --fg: #369;
  --bg: #def;
  --pgPercentage: var(--value);
  width: 100%; // var(--size);
  height: 100%; // var(--size);
  border-radius: 50%;
  background: 
    radial-gradient(closest-side, white 80%, transparent 0 99.9%, white 0),
    conic-gradient(var(--fg) calc(var(--pgPercentage) * 1%), var(--bg) 0)
    ;
  animation: growProgressBar 3s 1 forwards;
  
  //display: grid;
  //place-items: center;
  
  //font-family: Helvetica, Arial, sans-serif;
  //font-size: calc(var(--size) / 5);
  //color: var(--fg);
  
  &::before {
    counter-reset: percentage var(--value);
    content: counter(percentage) '%';
  }
}

/*div[role="progressbar"]::before {
  counter-reset: percentage var(--value);
  content: counter(percentage) '%';
}*/

@property --pgPercentage {
  syntax: '<number>';
  inherits: false;
  initial-value: 0;
}

@keyframes growProgressBar {
  0%, 33% { --pgPercentage: 0; }
  100% { --pgPercentage: var(--value); }
}




/*.svg-circle {
  position: relative;
  width: 100%;
  height: 100%;
}*/

/*.circle-frame {
  fill: none;
  stroke: $color-blue-dark;
  stroke-opacity: .2;
  stroke-width: 10px;
}

.circle-bar {
  fill: none;
  stroke-width: 10px;
}*/

/*.circle-bar {
  //transition: 
  animation: anim_circle 1s ease-in-out forwards;
}

//$(".circle-bar").animate({width: "70%"}, 2500);

@keyframes anim_circle {
  to {
    stroke-dashoffset: strokeDashoffset(attr(data-stroke-dashoffset));
  }
}

@function strokeDashoffset($num) {
  @return 360 - (360 * $num) / 100;
}*/


  
.caption {
  position: absolute;
  top: 50%;
  left: 50%;
  //top: 0;
  //left: 0;
  //right: 0;
  //bottom: 0;
  text-align: center;
  //font-size: 16px;
  //line-height: 120px;
  
  //padding: 0.25em 0.5em;
  //border-radius: 0.25em;
  transform: translate(-50%, -50%) rotate(90deg);
}


